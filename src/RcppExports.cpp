// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// CppLHS
List CppLHS(arma::mat xA, NumericVector cost, NumericMatrix strata, arma::mat include, bool factors, arma::uvec i_fact, int nsample, bool cost_mode, int iter, double wCont, double wFact, double wCorr, double temperature, double tdecrease, int length_cycle);
RcppExport SEXP _clhs_CppLHS(SEXP xASEXP, SEXP costSEXP, SEXP strataSEXP, SEXP includeSEXP, SEXP factorsSEXP, SEXP i_factSEXP, SEXP nsampleSEXP, SEXP cost_modeSEXP, SEXP iterSEXP, SEXP wContSEXP, SEXP wFactSEXP, SEXP wCorrSEXP, SEXP temperatureSEXP, SEXP tdecreaseSEXP, SEXP length_cycleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xA(xASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cost(costSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type strata(strataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type include(includeSEXP);
    Rcpp::traits::input_parameter< bool >::type factors(factorsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type i_fact(i_factSEXP);
    Rcpp::traits::input_parameter< int >::type nsample(nsampleSEXP);
    Rcpp::traits::input_parameter< bool >::type cost_mode(cost_modeSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< double >::type wCont(wContSEXP);
    Rcpp::traits::input_parameter< double >::type wFact(wFactSEXP);
    Rcpp::traits::input_parameter< double >::type wCorr(wCorrSEXP);
    Rcpp::traits::input_parameter< double >::type temperature(temperatureSEXP);
    Rcpp::traits::input_parameter< double >::type tdecrease(tdecreaseSEXP);
    Rcpp::traits::input_parameter< int >::type length_cycle(length_cycleSEXP);
    rcpp_result_gen = Rcpp::wrap(CppLHS(xA, cost, strata, include, factors, i_fact, nsample, cost_mode, iter, wCont, wFact, wCorr, temperature, tdecrease, length_cycle));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_clhs_CppLHS", (DL_FUNC) &_clhs_CppLHS, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_clhs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
